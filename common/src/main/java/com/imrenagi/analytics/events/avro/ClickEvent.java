/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.imrenagi.analytics.events.avro;  
@SuppressWarnings("all")
/** Contains the user id and the product that the user clicked */
@org.apache.avro.specific.AvroGenerated
public class ClickEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClickEvent\",\"namespace\":\"com.imrenagi.analytics.events.avro\",\"doc\":\"Contains the user id and the product that the user clicked\",\"fields\":[{\"name\":\"userId\",\"type\":\"int\"},{\"name\":\"productId\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int userId;
  @Deprecated public int productId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ClickEvent() {}

  /**
   * All-args constructor.
   */
  public ClickEvent(java.lang.Integer userId, java.lang.Integer productId) {
    this.userId = userId;
    this.productId = productId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return productId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.Integer)value$; break;
    case 1: productId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.Integer getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Integer value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'productId' field.
   */
  public java.lang.Integer getProductId() {
    return productId;
  }

  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.Integer value) {
    this.productId = value;
  }

  /** Creates a new ClickEvent RecordBuilder */
  public static com.imrenagi.analytics.events.avro.ClickEvent.Builder newBuilder() {
    return new com.imrenagi.analytics.events.avro.ClickEvent.Builder();
  }
  
  /** Creates a new ClickEvent RecordBuilder by copying an existing Builder */
  public static com.imrenagi.analytics.events.avro.ClickEvent.Builder newBuilder(com.imrenagi.analytics.events.avro.ClickEvent.Builder other) {
    return new com.imrenagi.analytics.events.avro.ClickEvent.Builder(other);
  }
  
  /** Creates a new ClickEvent RecordBuilder by copying an existing ClickEvent instance */
  public static com.imrenagi.analytics.events.avro.ClickEvent.Builder newBuilder(com.imrenagi.analytics.events.avro.ClickEvent other) {
    return new com.imrenagi.analytics.events.avro.ClickEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for ClickEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClickEvent>
    implements org.apache.avro.data.RecordBuilder<ClickEvent> {

    private int userId;
    private int productId;

    /** Creates a new Builder */
    private Builder() {
      super(com.imrenagi.analytics.events.avro.ClickEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.imrenagi.analytics.events.avro.ClickEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ClickEvent instance */
    private Builder(com.imrenagi.analytics.events.avro.ClickEvent other) {
            super(com.imrenagi.analytics.events.avro.ClickEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'userId' field */
    public java.lang.Integer getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public com.imrenagi.analytics.events.avro.ClickEvent.Builder setUserId(int value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'userId' field */
    public com.imrenagi.analytics.events.avro.ClickEvent.Builder clearUserId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'productId' field */
    public java.lang.Integer getProductId() {
      return productId;
    }
    
    /** Sets the value of the 'productId' field */
    public com.imrenagi.analytics.events.avro.ClickEvent.Builder setProductId(int value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'productId' field has been set */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'productId' field */
    public com.imrenagi.analytics.events.avro.ClickEvent.Builder clearProductId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ClickEvent build() {
      try {
        ClickEvent record = new ClickEvent();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.Integer) defaultValue(fields()[0]);
        record.productId = fieldSetFlags()[1] ? this.productId : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
